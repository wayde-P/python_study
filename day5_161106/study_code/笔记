#列表生成器
data=[i * 2 if i > 3 else i for i in data]

#netxt(data)
yield a     返回a,同时挂起当前这个函数,
            a返回给了通过__next__调用这个函数的人
            这代表通过yield就实现了函数的中断,并且保存了函数的中间执行状态.
next()仅可以唤醒生成器.
send()可以唤醒生成器.并传递值给yield

生成器一定都是迭代器.迭代器不一定都是生成器.
迭代器是用iter方法生成的.

装饰器的作用完全符合开发中的开放-封闭原则.在不改变原有功能代码,不改变原有调用方式,实现扩展新的功能.

模块导入的两种方法
import auth
import auth as os 取个别名为os
from auth import login

__file__ 相对路径的文件名
os.basename(os.path.abspath(__file__)) 把相对路径转换为绝对路径

py2
    目录里面没有__init__,那就只是一个目录.目录是不可以被导入的.
    有__Init__.那这个目录就变成了 "包" = package
    只不过在py3里面.目录不用加__init__也可以被导入

把一个内存对象转换成字符串的形式.就是序列化
相反就是反序列化

序列化的作用就是将内存的数据持久化

json 只支持简单的五大数据类型序列化
pikle支持几乎所有的数据类型的序列化